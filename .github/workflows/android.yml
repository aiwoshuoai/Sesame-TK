name: 构建测试版本

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 将时区设为亚洲/上海
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          echo "Current time: $(date)"

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 设置 JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "zulu"
          cache: gradle

      - name: 配置 Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: 授予 gradlew 的执行权限
        run: chmod +x gradlew

      - name: 使用 Gradle 进行构建
        run: ./gradlew assembleNormalRelease assembleCompatibleRelease -Pversion=${{ github.ref_name }}

      - name: 定位 APK 并设置输出
        id: locate_apks
        run: |
          normal_apk=$(find app/build/outputs/apk/normal/release -name "*.apk" | head -n 1)
          compatible_apk=$(find app/build/outputs/apk/compatible/release -name "*.apk" | head -n 1)
          echo "normal_apk=$normal_apk" >> $GITHUB_OUTPUT
          echo "compatible_apk=$compatible_apk" >> $GITHUB_OUTPUT

      - name: 将 APK 复制到暂存阶段以进行签名
        run: |
          mkdir -p app/build/outputs/apk/all
          cp "${{ steps.locate_apks.outputs.normal_apk }}" app/build/outputs/apk/all/
          cp "${{ steps.locate_apks.outputs.compatible_apk }}" app/build/outputs/apk/all/

      - name: 签名 APK
        id: sign_apks
        uses: ilharp/sign-android-release@v2
        with:
          releaseDir: app/build/outputs/apk/all
          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
          keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
          buildToolsVersion: 36.0.0

      - name: 提取已签名的 APK 路径
        id: extract_apks
        run: |
          IFS=':' read -r -a files <<< "${{ steps.sign_apks.outputs.signedFiles }}"
          for file in "${files[@]}"; do
            if [[ "$file" == *Normal* ]]; then
              echo "signed_normal=$file" >> $GITHUB_OUTPUT
            elif [[ "$file" == *Compatible* ]]; then
              echo "signed_compatible=$file" >> $GITHUB_OUTPUT
            fi
          done

      - name: 上传 APK - 兼容性
        uses: actions/upload-artifact@v4
        with:
          name: apk-compatible
          path: ${{ steps.extract_apks.outputs.signed_compatible }}

      - name: 上传 APK - 正常
        uses: actions/upload-artifact@v4
        with:
          name: apk-normal
          path: ${{ steps.extract_apks.outputs.signed_normal }}

      - name: 提取文件名
        id: extract_info
        run: |
          normal_file=$(basename "${{ steps.extract_apks.outputs.signed_normal }}")
          compatible_file=$(basename "${{ steps.extract_apks.outputs.signed_compatible }}")
          # 提取版本号（以"Normal-"或"Compatible-"之后的部分为起点，以"-signed"之前的内容为终点）
          version=$(echo "$normal_file" | sed -E 's/.*-(Normal|Compatible)-(.*)-signed\.apk/\2/')
          echo "normal_file=$normal_file" >> $GITHUB_OUTPUT
          echo "compatible_file=$compatible_file" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: 生成 APKS 校验和值
        run: |
          sha256sum ${{ steps.extract_apks.outputs.signed_normal }} > CHECKSUMS-Sesame-Normal-${{ steps.extract_info.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256
          sha256sum ${{ steps.extract_apks.outputs.signed_compatible }} > CHECKSUMS-Sesame-Compatible-${{ steps.extract_info.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256

      - name: 获取详细信息
        id: commit_details
        run: |
          COMMIT_MESSAGE_BODY=$( \
            if [[ "${{ github.event_name }}" == "push" ]]; then \
              echo "🔨 $(git rev-list --count ${{ github.event.before }}..${{ github.event.after }}) new commits to ${{ github.repository }}:${{ github.ref_name }} ([compare view](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.event.after }}))"; \
              echo ""; \
              git log --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an" ${{ github.event.before }}..${{ github.event.after }}; \
            elif [[ "${{ github.event_name }}" == "pull_request" ]]; then \
              echo "📦 Pull Request #${{ github.event.number }} for ${{ github.repository }}: ${{ github.head_ref }} -> ${{ github.base_ref }} ([view PR](https://github.com/${{ github.repository }}/pull/${{ github.event.number }}))"; \
              echo ""; \
              echo "Commits:"; \
              git log --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}; \
            elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then \
              echo "⚙️ Manual workflow run on ${{ github.ref_name }} by ${{ github.actor }}"; \
              echo ""; \
              echo "Latest commit:"; \
              git log -1 --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an"; \
            else \
              echo "ℹ️ Commit information for ${{ github.event_name }} event on ${{ github.ref_name }} by ${{ github.actor }}:"; \
              echo ""; \
              git log -1 --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an"; \
            fi \
          )
          echo "COMMIT_MESSAGE_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MESSAGE_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 发送合并信息
        if: ${{ false }}  # 禁用此步骤
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          message: |
            📦 *New Version ${{ steps.extract_info.outputs.version }} Build!*

            - Files: 
              - Normal: `${{ steps.extract_info.outputs.normal_file }}`
              - Compatible: `${{ steps.extract_info.outputs.compatible_file }}`
            - Branch: `${{ github.ref_name }}`
            - Triggered by: `${{ github.actor }}`

            *下载说明:*
              * Normal 为正常版本,适用于`Android 8.0`及以上的系统
              * Compatible 为兼容版本,适用于`Android 7.0`及以下的系统,最低支持`Android 5.1`

            ${{ steps.commit_details.outputs.COMMIT_MESSAGE_BODY }}
          format: markdown

      - name: 发送正常 APK
        if: ${{ false }}  # 禁用此步骤     
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          document: ${{ steps.extract_apks.outputs.signed_normal }}

      - name: 发送兼容的 APK
        if: ${{ false }}  # 禁用此步骤
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          document: ${{ steps.extract_apks.outputs.signed_compatible }}

      - name: 根据版本创建标签
        if: startsWith(github.ref, 'refs/heads/main') && github.event_name == 'push'
        run: |
          VERSION_TAG="v${{ steps.extract_info.outputs.version }}"
          echo "Creating tag: $VERSION_TAG"
          git tag "$VERSION_TAG"
          git push origin "$VERSION_TAG"
      - name: 将资产上传到源代码版本
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.release.tag_name || steps.extract_info.outputs.version }} # 发布的名称。默认为标签名称
          files: |
            ${{ steps.extract_apks.outputs.signed_compatible }}
            ${{ steps.extract_apks.outputs.signed_normal }}
            CHECKSUMS-Sesame-Normal-${{ steps.extract_info.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256
            CHECKSUMS-Sesame-Compatible-${{ steps.extract_info.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256
          tag_name: ${{ steps.extract_info.outputs.version}}
          draft: false
          append_body: true
          generate_release_notes: true
          body: |
            ## ✨What's Changed

            ${{ steps.commit_details.outputs.COMMIT_MESSAGE_BODY }}
            > ## 下载说明
              * Normal 为正常版本,适用于`Android 8.0`及以上的系统
              * Compatible 为兼容版本,适用于`Android 7.0`及以下的系统,最低支持`Android 5.1`

            > ~~墙内不再更新~~ 倒卖必死全家
      - name: 将发行版同步到目标存储库
        uses: softprops/action-gh-release@v2
        with:
          repository: Xposed-Modules-Repo/fansirsqi.xposed.sesame # 目标仓库的拥有者和仓库名称
          name: ${{ github.event.release.tag_name || steps.extract_info.outputs.version }} # 发布的名称。默认为标签名称
          files: |
            ${{ steps.sign_normal_apk.outputs.signedFile }}
            ${{ steps.sign_compatible_apk.outputs.signedFile }}
            CHECKSUMS-Sesame-Normal-${{ steps.extract_info.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256
            CHECKSUMS-Sesame-Compatible-${{ steps.extract_info.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256
          token: ${{ secrets.TARGET_REPO_PAT }}
          tag_name: ${{ steps.extract_info.outputs.version }}
          draft: false
          prerelease: ${{ steps.pre_release.outputs.IS_PRERELEASE }}
          append_body: false
          make_latest: true
          body: |
            📦 本 Release 同步自源仓库 [Sesame-TK](https://github.com/${{ github.repository }})
            ✨ **更新内容**:
            ${{ github.event.release.body || '无更新说明' }}
